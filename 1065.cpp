//1065. 单身狗(25)
//
//时间限制
//300 ms
//内存限制
//65536 kB
//代码长度限制
//8000 B
//判题程序
//Standard
//作者
//CHEN, Yue

//“单身狗”是中文对于单身人士的一种爱称。本题请你从上万人的大型派对中找出落单的客人，以便给予特殊关爱。
//
//输入格式：
//
//输入第一行给出一个正整数N（ <= 50000），是已知夫妻 / 伴侣的对数；
//随后N行，每行给出一对夫妻 / 伴侣――为方便起见，每人对应一个ID号，为5位数字（从00000到99999），
//ID间以空格分隔；之后给出一个正整数M（ <= 10000），为参加派对的总人数；
//随后一行给出这M位客人的ID，以空格分隔。题目保证无人重婚或脚踩两条船。
//
//输出格式：
//
//首先第一行输出落单客人的总人数；随后第二行按ID递增顺序列出落单的客人。
//ID间用1个空格分隔，行的首尾不得有多余空格。
//
//输入样例：
//3
//11111 22222
//33333 44444
//55555 66666
//7
//55555 44444 10000 88888 22222 11111 23333
//输出样例：
//5
//10000 23333 44444 55555 88888

//idea:
//题目要求的单身狗是本人到场但伴侣没到场也算单身狗
//这和我理解不一样呀，所以我第一次就做错了
//这里我用了map记录伴侣，也可以用数组作为记录

#include <iostream>
#include <cmath>
#include <map>

using namespace std;

int main()
{
	int n;
	int a, b, c;

	map<int, int> fri;
	int come[100000] = { 0 };

	cin >> n;
	for (int i = 0; i != n; ++i)
	{
		cin >> a >> b;

		fri[a] = b;
		fri[b] = a;
	}

	int m;
	cin >> m;
	for (int i = 0; i != m; ++i)
	{
		cin >> c;
		come[c] = 1;
	}

	int count = 0;
	for (int i = 0; i != 100000; ++i)
	{
		if (come[i])
		{
			//有伴侣的只来一个也算单身狗
			if (come[fri[i]]==0)
				++count;
		}
	}
	cout << count << endl;

	int sym = 0;
	for(int i=0;i!=100000;++i)
	{
		if (come[i])
		{
			if (come[fri[i]] == 0)
			{
				if (sym)
					printf(" %05d", i);
				else
				{
					printf("%05d", i);
					sym = 1;
				}
			}
		}
	}
}